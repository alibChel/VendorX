<?xml version="1.0" encoding="UTF-8" ?>
<ContentPage
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    x:Class="VendorX.Views.MainPage"
    xmlns:vm="clr-namespace:Vendor.ViewModels"
    xmlns:toolkit="http://xamarin.com/schemas/2020/toolkit"
    xmlns:fa="clr-namespace:FontAwesome"
    xmlns:helpers="clr-namespace:Vendor.Helpers"
    xmlns:models="clr-namespace:Vendor.Models"
    xmlns:forms="clr-namespace:ZXing.Net.Mobile.Forms;assembly=ZXing.Net.Mobile.Forms"
       xmlns:tempate="clr-namespace:VendorX.Views.Template"

     Shell.NavBarIsVisible="False"

    xmlns:res="clr-namespace:VendorX.Resources"
    x:DataType="vm:MainPageViewModel">
    <ContentPage.Resources>
        <ResourceDictionary>
            <toolkit:ListIsNullOrEmptyConverter x:Key="IsListNullOrEmptyConverter"/>
            <toolkit:IsNullOrEmptyConverter x:Key="IsStringNullOrWhiteSpaceConverter"/>
            <toolkit:IsNotNullOrEmptyConverter x:Key="IsStringNotNullOrWhiteSpaceConverter"/>
            <toolkit:IntToBoolConverter x:Key="IntToBoolConverter"/>
            <toolkit:DoubleToIntConverter x:Key="DoubleToIntConverter"/>
            <helpers:ProfileImageSourceConverter x:Key="ProfileImageSourceConverter"/>
            <helpers:ImageSourceConverter x:Key="ImageSourceConverter"/>
            <helpers:UsedPriceNotEqualPriceConverter x:Key="UsedPriceNotEqualPriceConverter"/>
            <!--карточка товара-->
            <DataTemplate x:Key="ItemTamplate" x:DataType="models:Item">
                <Frame Margin="2" 
                        toolkit:TouchEffect.Command="{Binding Source={RelativeSource AncestorType={x:Type vm:MainPageViewModel}}, Path=AddItemToCartCommand}"
                       toolkit:TouchEffect.CommandParameter="{Binding .}"
                        toolkit:TouchEffect.LongPressCommand="{Binding Source={RelativeSource AncestorType={x:Type vm:MainPageViewModel}}, Path=EditItemCommand}"
                        toolkit:TouchEffect.LongPressCommandParameter="{Binding .}"
                        HeightRequest="{Binding Source={RelativeSource AncestorType={x:Type vm:MainPageViewModel}}, Path=ItemCellHeight, Mode=OneWay}">


                    <Grid RowDefinitions="*,20,25" RowSpacing="0"
                          >
                        <Image Source="{Binding PhotoUrl,Converter={StaticResource ImageSourceConverter} , Mode=OneWay}" 
                               Aspect="AspectFill" Grid.RowSpan="3" toolkit:CornerRadiusEffect.CornerRadius="12"/>
                        <Frame   Grid.Row="1" Grid.RowSpan="2" BackgroundColor="#90000000" CornerRadius="0" toolkit:CornerRadiusEffect.CornerRadius="0,0,12,12">

                        </Frame>

                        <Label   Grid.Row="1" Margin="10,0" Text="{Binding Name, Mode=OneWay}" LineBreakMode="TailTruncation"
                                 TextColor="White" FontSize="Small" VerticalOptions="End" FontAttributes="Bold"/>

                        <Label Grid.Row="2" Margin="10,0" TextColor="#F0F0F0"  FontAttributes="Bold" VerticalOptions="Center" >
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="{Binding Price, Mode=OneWay, StringFormat='{0:N2}'}"  FontAttributes="Bold"/>
                                    <Span Text=" "/>
                                    <Span Text="{Binding Source={RelativeSource AncestorType={x:Type vm:MainPageViewModel}}, Path=WalletTag,Mode=OneWay}" FontAttributes="Bold"/>
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                        <Frame  BackgroundColor="Red" VerticalOptions="Start" HorizontalOptions="Start" Margin="6" Padding="5,2" CornerRadius="8" IsVisible="{Binding IsArchive, Mode=OneWay}">
                            <Label Text="{x:Static res:AppResources.ArchiveLabel}" TextColor="White" FontAttributes="Bold" FontSize="11" HorizontalOptions="Center" VerticalOptions="Center"/>
                        </Frame>
                        <!--<Grid.GestureRecognizers>
                            <TapGestureRecognizer NumberOfTapsRequired="2" Command="{Binding Source={RelativeSource AncestorType={x:Type vm:MainPageViewModel}}, Path=EditItemCommand}" CommandParameter="{Binding .}"/>
                            <TapGestureRecognizer NumberOfTapsRequired="1" Command="{Binding Source={RelativeSource AncestorType={x:Type vm:MainPageViewModel}}, Path=AddItemToCartCommand}" CommandParameter="{Binding .}"/>                            
                        </Grid.GestureRecognizers>-->
                    </Grid>
                </Frame>
            </DataTemplate>
            <!--темплейт миникорзины-->
            <DataTemplate x:Key="DownCartTamplate">
                <Frame  x:DataType="models:TransactionItem"  WidthRequest="60" HeightRequest="80">
                    <Grid >
                        <Image  Aspect="AspectFill" Source="{Binding PhotoUrl, Converter={StaticResource ImageSourceConverter}, Mode=OneTime}" 
                                toolkit:CornerRadiusEffect.CornerRadius="12"/>
                        <Frame HeightRequest="20" HorizontalOptions="Center"  BorderColor="#60111111" BackgroundColor="White"
                                 TranslationX="16" TranslationY="-25" VerticalOptions="Center" WidthRequest="20" CornerRadius="10">
                            <Label HorizontalOptions="Center" HorizontalTextAlignment="Center" FontSize="14"
                                   FontAttributes="Bold" Text="{Binding Count, Mode=OneWay, StringFormat='{0:N2}'}"
                               TextColor="Black"  VerticalOptions="Center" />
                        </Frame>
                    </Grid>
                    <Frame.GestureRecognizers>
                        <TapGestureRecognizer NumberOfTapsRequired="1" Command="{Binding Source={RelativeSource AncestorType={x:Type vm:MainPageViewModel}}, Path=RemoveItemFromCartCommand}" CommandParameter="{Binding .}"/>
                    </Frame.GestureRecognizers>
                </Frame>
            </DataTemplate>
            <!--темплейт основной корзины-->
            <DataTemplate x:Key="CheckOutItemTamplate">
                <Grid ColumnDefinitions="75,*,.2*,.33*,.33*" RowDefinitions="*,auto" x:DataType="models:TransactionItem" Padding="2" ColumnSpacing="1"
                          BackgroundColor="{AppThemeBinding Dark={StaticResource HeaderBarBackgroundColorDark}, Light={StaticResource HeaderBarBackgroundColorLight}}"
                          toolkit:CornerRadiusEffect.CornerRadius="18">

                    <Image HeightRequest="75" Grid.RowSpan="2" Aspect="AspectFill" Source="{Binding PhotoUrl, Converter={StaticResource ImageSourceConverter}, Mode=OneTime}"
                               BackgroundColor="{StaticResource TransperentDark}">
                        <Image.Clip>
                            <RoundRectangleGeometry CornerRadius="12" Rect="0,0,75,110"   />

                        </Image.Clip>

                    </Image>

                    <StackLayout  Grid.Column="1" Padding="10,0"   Spacing="0">
                        <Label IsVisible="{Binding Discount, Converter={StaticResource IntToBoolConverter},Mode=OneWay}" >
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="{x:Static res:AppResources.DiscountLabel}" FontSize="Micro"/>
                                    <Span Text="{Binding Discount, StringFormat=' {0:N2}% ',Mode=OneWay}"  FontSize="Micro"  FontAttributes="Bold" TextColor="White" BackgroundColor="Red" />
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                        <Label IsVisible="{Binding Markup , Converter={StaticResource IntToBoolConverter},Mode=OneWay}" >
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="{x:Static res:AppResources.MarkupLabel}" FontSize="Micro"/>
                                    <Span Text="{Binding Markup, StringFormat=' {0}% ',Mode=OneWay}"  FontSize="Micro"  FontAttributes="Bold"
                                          TextColor="White" BackgroundColor="{StaticResource GreenButton}" />
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                        <Label   Text="{Binding ItemName,Mode=OneTime}" LineBreakMode="TailTruncation"  FontSize="Default" />
                        <Label   Opacity="0.3"
                               IsVisible="{Binding IsItemPriceNotEqualsPrice,Mode=OneWay}"
                               FontSize="Default" FontAttributes="Bold">
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="{Binding ItemPrice,Mode=OneWay, StringFormat='{0:N2}'}"  TextDecorations="Strikethrough"  />
                                    <Span Text=" " />
                                    <Span Text="{Binding Source={RelativeSource AncestorType={x:Type vm:MainPageViewModel}}, Path=WalletTag,Mode=OneWay}"/>
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                        <Label FontSize="Default" FontAttributes="Bold" >
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="{Binding Price,Mode=OneWay, StringFormat='{0:N2}'}" />
                                    <Span Text=" " />
                                    <Span Text="{Binding Source={RelativeSource AncestorType={x:Type vm:MainPageViewModel}}, Path=WalletTag,Mode=OneWay}"/>
                                </FormattedString>
                            </Label.FormattedText>
                            <Label.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type vm:MainPageViewModel}}, Path=SetItemCustomPriceCommand,Mode=OneTime}"		
                                                    CommandParameter="{Binding .}" />

                            </Label.GestureRecognizers>
                        </Label>
                    </StackLayout>

                  

                    <StackLayout Grid.Column="1" Grid.ColumnSpan="2" Margin="120,0,0,0"  Spacing="5" HorizontalOptions="FillAndExpand" >
                        <Entry Text="{Binding Count,Mode=TwoWay, StringFormat='{0:N2}'}" TextColor="{StaticResource Primary}" Focused="Entry_Focused" Unfocused="Entry_Unfocused"  Completed="Entry_Completed"
                             HorizontalTextAlignment="Center"  VerticalTextAlignment="Center" VerticalOptions="CenterAndExpand"
                             FontSize="Medium" FontAttributes="Bold" Keyboard="Numeric"   >
                            <Entry.Behaviors>
                                <toolkit:MaskedBehavior   Mask="XXXXXXX" UnMaskedCharacter="X"  />
                            </Entry.Behaviors>

                        </Entry>
                       
                    </StackLayout>

                    <StackLayout Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="4" Spacing="5" HorizontalOptions="End" Margin="10,0,10,10" >
                       
                        <Label  VerticalOptions="End" HorizontalOptions="End" VerticalTextAlignment="End" 
                             FontSize="Default" FontAttributes="Bold">
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="{Binding FinalPrice,Mode=OneWay, StringFormat='{0:N2}'}" FontAttributes="Bold"/>
                                    <Span Text=" "/>
                                    <Span Text="{Binding Source={RelativeSource AncestorType={x:Type vm:MainPageViewModel}}, Path=WalletTag,Mode=OneWay}"/>
                                </FormattedString>
                            </Label.FormattedText>
                            <Label.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type vm:MainPageViewModel}}, Path=SetItemsCustomPriceCommand,Mode=OneTime}"		
                                                      CommandParameter="{Binding .}" />
                            </Label.GestureRecognizers>
                        </Label>
                    </StackLayout>


                    <Frame Grid.Column="3"  Margin="0,5" HeightRequest="60" VerticalOptions="Center" toolkit:CornerRadiusEffect.CornerRadius="30,0,30,0"
                           BackgroundColor="{StaticResource Primary}" toolkit:TouchEffect.NativeAnimation="True">

                        <Label Text="{x:Static fa:FontAwesomeIcons.Minus}" FontFamily="FAS" FontSize="Subtitle" TextColor="White"
                               HorizontalOptions="Center" VerticalOptions="Center" />
                        <Frame.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type vm:MainPageViewModel}}, Path=RemoveItemFromCartCommand,Mode=OneTime}"
                                                  CommandParameter="{Binding .}"/>
                        </Frame.GestureRecognizers>

                    </Frame>
                    <Frame Grid.Column="4" Margin="0,5" HeightRequest="60" VerticalOptions="Center" toolkit:CornerRadiusEffect.CornerRadius="0,30,0,30"
                           BackgroundColor="{StaticResource Primary}" toolkit:TouchEffect.NativeAnimation="True">

                        <Label Text="{x:Static fa:FontAwesomeIcons.Plus}" FontFamily="FAS" FontSize="Subtitle" TextColor="White"
                               HorizontalOptions="Center" VerticalOptions="Center" />
                        <Frame.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type vm:MainPageViewModel}}, Path=AddTransactionItemToCartCommand,Mode=OneTime}"
                                                  CommandParameter="{Binding .}"/>
                        </Frame.GestureRecognizers>
                    </Frame>
                </Grid>

            </DataTemplate>
        </ResourceDictionary>
    </ContentPage.Resources>

    <Grid RowDefinitions="50,60,*" RowSpacing="0" Padding="0,5,0,0" >


  <tempate:HeaderViewProfile ShopName="{Binding Shop.Name, Mode=OneWay}" ProfileUrl="{Binding Profile.PhotoUrl,Mode=OneWay}"/>



        <Grid ColumnDefinitions=".02*,*,60,60" Grid.Row="1" Margin="10,0" ColumnSpacing="5" >

            <Frame Grid.Column="1" Margin="2.5,5" >
                <Grid >
                    <Label Text="{x:Static fa:FontAwesomeIcons.MagnifyingGlass}" FontFamily="FAS" FontSize="Subtitle"
                           TextColor="{StaticResource Primary}" Opacity="0.5"  VerticalOptions="Center" HorizontalOptions="End" Margin="15,0"
                           >
                        <Label.Triggers>
                            <DataTrigger TargetType="Label" Binding="{Binding Searchtext, Converter={StaticResource IsStringNullOrWhiteSpaceConverter}}" Value="false">
                                <Setter Property="IsVisible" Value="false"/>
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>
                    <Entry x:Name="SearchEntry" Text="{Binding Searchtext}" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand" Margin="10,0"
                           ClearButtonVisibility="WhileEditing" VerticalTextAlignment="Center"/>
                </Grid>
            </Frame>
            <Frame  Grid.Column="2" Margin="2.5,5" toolkit:TouchEffect.NativeAnimation="True" HorizontalOptions="Fill" >
                <Label Grid.Column="2" Text="{x:Static fa:FontAwesomeIcons.Sliders}" FontSize="Subtitle" FontFamily="FAS"
                   TextColor="{StaticResource Primary}" VerticalOptions="Center" HorizontalOptions="Center">

                </Label>
                <Frame.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding HideShowFiltersCommand}"/>
                </Frame.GestureRecognizers>
            </Frame>

            <Frame  Grid.Column="3" Margin="2.5,5" toolkit:TouchEffect.NativeAnimation="True" HorizontalOptions="Fill">
                <Label Grid.Column="2" Text="{x:Static fa:FontAwesomeIcons.Camera}" FontSize="Subtitle" FontFamily="FAS"
                   TextColor="{StaticResource Primary}" VerticalOptions="Center" HorizontalOptions="Center">

                </Label>
                <Frame.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding HideShowScanCommand}"/>
                </Frame.GestureRecognizers>
            </Frame>


        </Grid>





        <!--основной каталог-->
        <Grid x:Name="PrimaryCatalog" Grid.Row="2" RowSpacing="0"  RowDefinitions="*,auto" BackgroundColor="Transparent"  Margin="0,10" Padding="10,0">
            
            <CollectionView x:Name="ItemsCollectionView"   ItemsSource="{Binding Items, Mode=OneWay}" ItemTemplate="{StaticResource ItemTamplate}"   >
                <CollectionView.ItemsLayout>
                    <GridItemsLayout Orientation="Vertical" Span="3" HorizontalItemSpacing="5" VerticalItemSpacing="5"   />
                </CollectionView.ItemsLayout>
            </CollectionView>



            <BoxView Grid.Row="1" x:Name="CatalogIndent" Color="Transparent" HeightRequest="300"/>
        </Grid>

        <!-- barcode -->
        <Frame Grid.Row="0" Grid.RowSpan="3" BackgroundColor="{StaticResource TransperentDark}" x:Name="CatalogCameraScan" CornerRadius="25"  >
            <Grid  RowDefinitions="80,*"  RowSpacing="0" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand" toolkit:CornerRadiusEffect.CornerRadius="20" >

                <Label  Text="{x:Static res:AppResources.BarcodeScanerLabel}" TextColor="White" FontSize="Body" FontAttributes="Bold" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" />
                <Grid x:Name="gridScanner"  Grid.Row="1" BackgroundColor="Transparent" >
                    <forms:ZXingScannerView x:Name="barcodeScanner" 
                                            IsScanning="{Binding IsScannerVisible}" IsAnalyzing="True" 
                                            OnScanResult="ZXingScannerView_OnScanResult" >

                    </forms:ZXingScannerView>
                </Grid>

                <Image Source="TransperetScanWin.png" Grid.Row="1" Aspect="AspectFill"  />

                <Frame HeightRequest="50" Grid.Row="0" WidthRequest="50" Margin="20,4" HorizontalOptions="Start" VerticalOptions="Center"  CornerRadius="25" BackgroundColor="{StaticResource Primary}" >
                    <Label FontFamily="FAS" Text="{x:Static fa:FontAwesomeIcons.Xmark}" TextColor="White" FontSize="Title" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" />
                    <Frame.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding HideShowScanCommand}" />
                    </Frame.GestureRecognizers>
                </Frame>

            </Grid>
        </Frame>
        <!-- barcode -->


        <Frame x:Name="Cart" Grid.RowSpan="3" toolkit:CornerRadiusEffect.CornerRadius="20,20,0,0" CornerRadius="0" HasShadow="True"
                BackgroundColor="{AppThemeBinding Dark={StaticResource BackgroundColorDark}, Light={StaticResource BackgroundColorLight}}">

            <Grid RowDefinitions="20,auto,*,auto" RowSpacing="5">
                <BoxView HeightRequest="5" VerticalOptions="Center" HorizontalOptions="Center" WidthRequest="120" Opacity=".3" CornerRadius="2" TranslationY="2.5"/>
                <!--мини корзина и кнопка перехода к завершению покупки-->
                <StackLayout x:Name="MiniCart" Grid.Row="1" Spacing="5">
                    <CollectionView x:Name="MiniCartCollection" Margin="10,0" HeightRequest="80" HorizontalOptions="StartAndExpand"
                                    ItemsSource="{Binding CheckOutItems, Mode=OneTime}" ItemTemplate="{StaticResource DownCartTamplate}">
                        <CollectionView.ItemsLayout>
                            <GridItemsLayout Orientation="Horizontal"  HorizontalItemSpacing="5"  />
                        </CollectionView.ItemsLayout>
                    </CollectionView>

                    <!--<dxc:DXCollectionView  ItemsSource="{Binding CheckOutItems, Mode=OneWay}" x:Name="MiniCartCollection" Orientation="Horizontal"
                                           ItemTemplate="{StaticResource DownCartTamplate}" Margin="10,0" MaximumHeightRequest="80"
                                           ItemSpacing="5"/>-->
                    <Button x:Name="CartCheckBtn" Margin="20,0" BackgroundColor="{StaticResource GreenButton}" Command="{Binding ShowCartCommand}"
                            Text="{Binding TotalPriceText, StringFormat='{0:N2}'}" >
                 
                    </Button>
                </StackLayout>
                <!--Блок с описанием и контактом-->
                <Grid Grid.Row="1" x:Name="DescriptionBlock" RowSpacing="5" RowDefinitions="*,auto">
                    <Frame Margin="20,0" HeightRequest="50"  >
                        <Grid ColumnDefinitions="*,.15*" ColumnSpacing="0">
                            <Entry Grid.ColumnSpan="2" Text="{Binding Description}" Placeholder="{x:Static res:AppResources.EnterDescriptionLabel}" Margin="10,0" MinimumHeightRequest="50"/>
                            <Frame Grid.Column="1" BackgroundColor="Transparent">
                                <Label Text="{Static fa:FontAwesomeIcons.UserPlus}" FontFamily="FAS" HorizontalOptions="Center"
                                       VerticalOptions="Center" TextColor="{StaticResource Primary}" />
                                <Frame.GestureRecognizers>
                                    <TapGestureRecognizer Command="{Binding BrowseContactCommand}"/>
                                </Frame.GestureRecognizers>
                            </Frame>
                        </Grid>
                    </Frame>
                    <Frame Margin="30,0" IsVisible="{Binding IsContactVisible}" Grid.Row="1"  HorizontalOptions="End" HeightRequest="25" >
                        <StackLayout Padding="5,3" Spacing="5" Orientation="Horizontal" >
                            <Label Text="{Binding ContactName,Mode=OneWay}"  FontSize="12" VerticalTextAlignment="Center" FontAttributes="Bold" HorizontalOptions="Center"/>
                            <Label Text="{Binding ContactPhone,Mode=OneWay}" FontSize="13" VerticalTextAlignment="Center" FontAttributes="Bold"/>
                            <Frame  BackgroundColor="Transparent">
                                <Label  Text="{Static fa:FontAwesomeIcons.Xmark}" HorizontalOptions="Center" TextColor="{StaticResource Primary}"
                                        FontSize="Small" FontFamily="FAS" VerticalTextAlignment="Center">
                                    <Label.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding ClearContactCommand, Mode=OneTime}" />
                                    </Label.GestureRecognizers>
                                </Label>
                            </Frame>
                        </StackLayout>
                        <Frame.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding BrowseContactCommand, Mode=OneTime}" />
                        </Frame.GestureRecognizers>
                    </Frame>
                </Grid>
                <!--основная корзина-->
                <Frame Grid.Row="2" Margin="5,0" x:Name="CartCollection" CornerRadius="18"
                       BackgroundColor="{AppThemeBinding Light={StaticResource BackgroundColorLight}, Dark={StaticResource BackgroundColorDark}}">
                    <CollectionView ItemsSource="{Binding CheckOutItems, Mode=OneWay}" ItemTemplate="{StaticResource CheckOutItemTamplate}">
                        <CollectionView.ItemsLayout>
                            <GridItemsLayout Orientation="Vertical"  HorizontalItemSpacing="5" VerticalItemSpacing="5"  />
                        </CollectionView.ItemsLayout>
                    </CollectionView>
                    <!--<dxc:DXCollectionView  ItemsSource="{Binding CheckOutItems, Mode=OneWay}"  ItemSpacing="5"
                                           ItemTemplate="{StaticResource CheckOutItemTamplate}" />-->

                </Frame>



                <!--кнопки и информация-->
                <StackLayout Grid.Row="3" Padding="10,0" Spacing="10" Margin="0,0,0,10" VerticalOptions="End">
                    <Grid ColumnDefinitions="*,*" ColumnSpacing="10"  >
                        <Button Text="{x:Static res:AppResources.CancelLabel}"  
                                VerticalOptions="FillAndExpand" Command="{Binding ClearCartCommand, Mode=OneTime}" />
                        <Button Grid.Column="1"  Text="{x:Static res:AppResources.CompleteLabel}" 
                                Command="{Binding SaveTransactionCommand, Mode=OneTime}"  
                                BackgroundColor="{StaticResource GreenButton}"  />
                    </Grid>

                    <Frame Padding="10">

                        <Grid RowDefinitions="auto,auto,auto,auto,auto" ColumnDefinitions=".7*,*" Padding="5,0">
                            <Label Text="{x:Static res:AppResources.TotalLabel}" FontAttributes="Bold" FontSize="Subtitle" />
                            <Label Grid.Column="1"  HorizontalOptions="End">
                                <Label.FormattedText>
                                    <FormattedString>
                                        <Span Text="{Binding Total,StringFormat='{0:N2}', Mode=OneWay} " FontAttributes="Bold" FontSize="Subtitle"/>
                                        <Span Text=" " />
                                        <Span Text="{Binding  WalletTag, Mode=OneWay}" FontAttributes="Bold" FontSize="Subtitle"/>
                                    </FormattedString>
                                </Label.FormattedText>
                            </Label>



                            <Label Grid.Row="1" Text="{Binding TotalDicsountOrMarkup,Mode=OneWay}" FontAttributes="Bold" FontSize="Subtitle" TextColor="{StaticResource Primary}"
                               IsVisible="{Binding TotalDicount, Converter={StaticResource DoubleToIntConverter}, Mode=OneWay}"/>
                            <Label Grid.Row="1" Grid.Column="1" HorizontalOptions="End" 
                               IsVisible="{Binding TotalDicount , Converter={StaticResource DoubleToIntConverter}, Mode=OneWay}">
                                <Label.FormattedText>
                                    <FormattedString>
                                        <Span Text="{Binding TotalDicount,StringFormat='{0:N2}', Mode=OneWay} " FontAttributes="Bold" FontSize="Subtitle" TextColor="{StaticResource Primary}" />
                                        <Span Text=" " />
                                        <Span Text="{Binding  WalletTag, Mode=OneWay}" FontAttributes="Bold" FontSize="Subtitle" />
                                    </FormattedString>
                                </Label.FormattedText>
                                <Label.GestureRecognizers>
                                    <TapGestureRecognizer Command="{Binding ChangeTransactionTotalDiscountCommand, Mode=OneTime}"		
                                            CommandParameter="{Binding .}" />
                                </Label.GestureRecognizers>
                            </Label>






                            <Label Grid.Row="2" Text="{x:Static res:AppResources.InPayLabel}" FontAttributes="Bold" FontSize="Subtitle"  />
                            <Label Grid.Row="2" Grid.Column="1" FontAttributes="Bold"  HorizontalOptions="End" >
                                <Label.FormattedText>
                                    <FormattedString>
                                        <Span Text="{Binding TotalPrice,StringFormat='{0:N2}', Mode=OneWay} " FontAttributes="Bold" FontSize="Subtitle" />
                                        <Span Text=" " />
                                        <Span Text="{Binding  WalletTag, Mode=OneWay}" FontAttributes="Bold" FontSize="Subtitle" />
                                    </FormattedString>
                                </Label.FormattedText>
                                <Label.GestureRecognizers>
                                    <TapGestureRecognizer Command="{Binding ChangeTransactionTotalPriceCommand, Mode=OneTime}"		
                                            CommandParameter="{Binding .}" />
                                </Label.GestureRecognizers>
                            </Label>


                            <Label Grid.Row="3" Text="{x:Static res:AppResources.ContributedLabel}" FontAttributes="Bold" FontSize="Subtitle"  />
                            <Label Grid.Row="3" Grid.Column="1"   HorizontalOptions="End" >
                                <Label.FormattedText>
                                    <FormattedString>
                                        <Span Text="{Binding DepSumm,StringFormat='{0:N2}', Mode=OneWay} " FontAttributes="Bold" FontSize="Subtitle" />
                                        <Span Text=" " />
                                        <Span Text="{Binding  WalletTag, Mode=OneWay}" FontAttributes="Bold" FontSize="Subtitle"/>
                                    </FormattedString>
                                </Label.FormattedText>
                                <Label.GestureRecognizers>
                                    <TapGestureRecognizer Command="{Binding ChangeTransactionDepSummCommand, Mode=OneTime}"		
                                            CommandParameter="{Binding .}" />
                                </Label.GestureRecognizers>
                            </Label>



                            <Label Grid.Row="4" Text="{Binding SummDiffirenceText,Mode=OneWay}" FontAttributes="Bold" FontSize="Subtitle" TextColor="{Binding SummDiffirenceColor}"
                               IsVisible="{Binding SummDiffirence , Converter={StaticResource DoubleToIntConverter}, Mode=OneWay}"/>
                            <Label Grid.Row="4" Grid.Column="1"  HorizontalOptions="End"
                               IsVisible="{Binding SummDiffirence, Converter={StaticResource DoubleToIntConverter}, Mode=OneWay}">
                                <Label.FormattedText>
                                    <FormattedString>
                                        <Span Text="{Binding SummDiffirence,StringFormat='{0:N2}', Mode=OneWay} " FontAttributes="Bold" FontSize="Subtitle" TextColor="{Binding SummDiffirenceColor}"/>
                                        <Span Text=" " />
                                        <Span Text="{Binding  WalletTag, Mode=OneWay}" FontAttributes="Bold" FontSize="Subtitle" />
                                    </FormattedString>
                                </Label.FormattedText>
                            </Label>

                        </Grid>
                    </Frame>


                </StackLayout>
            </Grid>

            <Frame.GestureRecognizers>
                <PanGestureRecognizer PanUpdated="CartPanGestureRecognizer_PanUpdated" />
            </Frame.GestureRecognizers>
        </Frame>

        <!--кнопка добавления товара-->
        <Button x:Name="AddButton" Grid.Row="2" BackgroundColor="{StaticResource Primary}" HeightRequest="60" WidthRequest="60"
                IsVisible="{Binding IsAddButoonVisible}"
                 VerticalOptions="End"  HorizontalOptions="End" Margin="20,70" CornerRadius="30" FontSize="Title"
                 Command="{Binding CreateNewItemCommand, Mode=OneTime}" Text="{x:Static fa:FontAwesomeIcons.Plus}" FontFamily="FAS"/>

        <Grid x:Name="FilterBG" BackgroundColor="{StaticResource TransperentDark}" Grid.RowSpan="3" InputTransparent="False">
            <Frame x:Name="FilterBar" VerticalOptions="End" InputTransparent="False" 
                    CornerRadius="0" toolkit:CornerRadiusEffect.CornerRadius="18,18,0,0">
                <Grid RowDefinitions="20,*" Margin="0,0,0,20">
                    <BoxView HeightRequest="5" HorizontalOptions="Center" VerticalOptions="Center" WidthRequest="120" Opacity=".3" CornerRadius="2" TranslationY="2.5"/>
                    <Grid RowDefinitions="50,40,40,40,50,40,40,40" Grid.Row="1" ColumnDefinitions="*,.2*" Padding="20,0,10,10">
                        <Label Text="{x:Static res:AppResources.SortLabel}" FontSize="{OnPlatform iOS='Subtitle', Android='Title'}" FontAttributes="Bold" VerticalOptions="Center" />

                        <Grid Grid.Row="1" Grid.ColumnSpan="2" Padding="10,0,0,0" ColumnDefinitions="*,.2*" BackgroundColor="Transparent" >
                            <Label Text="{x:Static res:AppResources.StartNewLabel}" FontSize="Medium" FontAttributes="None" VerticalOptions="Center"/>
                            <Label Grid.Column="1" Text="{x:Static fa:FontAwesomeIcons.Circle}" FontFamily="FAR"
                                   HorizontalOptions="Center" VerticalOptions="Center" FontSize="Title" TextColor="{StaticResource Primary}">
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label" Binding="{Binding SortNew}" Value="true">
                                        <Setter Property="Text" Value="{x:Static fa:FontAwesomeIcons.CircleCheck}" />
                                        <Setter Property="TextColor" Value="{StaticResource GreenButton}"/>
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>
                            <Grid.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding SortChangedCommand}" CommandParameter="{x:Static models:ItemSort.New}"/>
                            </Grid.GestureRecognizers>
                        </Grid>


                        <Grid Grid.Row="2" Grid.ColumnSpan="2" Padding="10,0,0,0" ColumnDefinitions="*,.2*" BackgroundColor="Transparent">
                            <Label Text="{x:Static res:AppResources.StartLessLabel}" FontSize="Medium" FontAttributes="None" VerticalOptions="Center"/>
                            <Label Grid.Column="1" Text="{x:Static fa:FontAwesomeIcons.Circle}" FontFamily="FAR"
                                   HorizontalOptions="Center" VerticalOptions="Center" FontSize="Title" TextColor="{StaticResource Primary}">
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label" Binding="{Binding SortLowPrice}" Value="true">
                                        <Setter Property="Text" Value="{x:Static fa:FontAwesomeIcons.CircleCheck}" />
                                        <Setter Property="TextColor" Value="{StaticResource GreenButton}"/>
                                    </DataTrigger>
                                </Label.Triggers>

                            </Label>
                            <Grid.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding SortChangedCommand}" CommandParameter="{x:Static models:ItemSort.Min}"/>
                            </Grid.GestureRecognizers>
                        </Grid>


                        <Grid Grid.Row="3" Grid.ColumnSpan="2" Padding="10,0,0,0" ColumnDefinitions="*,.2*" BackgroundColor="Transparent">
                            <Label Text="{x:Static res:AppResources.StartRichLabel}" FontSize="Medium" FontAttributes="None" VerticalOptions="Center"/>
                            <Label Grid.Column="1" Text="{x:Static fa:FontAwesomeIcons.Circle}" FontFamily="FAR"
                                   HorizontalOptions="Center" VerticalOptions="Center" FontSize="Title" TextColor="{StaticResource Primary}">
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label" Binding="{Binding SortHiPrice}" Value="true">
                                        <Setter Property="Text" Value="{x:Static fa:FontAwesomeIcons.CircleCheck}" />
                                        <Setter Property="TextColor" Value="{StaticResource GreenButton}"/>
                                    </DataTrigger>
                                </Label.Triggers>

                            </Label>
                            <Grid.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding SortChangedCommand}" CommandParameter="{x:Static models:ItemSort.Max}"/>
                            </Grid.GestureRecognizers>
                        </Grid>


                        <Label Grid.Row="4" Text="{x:Static res:AppResources.FiltrLabel}" FontSize="{OnPlatform iOS=Subtitle, Android=Title}" FontAttributes="Bold" VerticalOptions="Center" />

                        <Grid Grid.Row="5" Grid.ColumnSpan="2" Padding="10,0,0,0" ColumnDefinitions="*,.2*" BackgroundColor="Transparent" >
                            <Label Text="{x:Static res:AppResources.ShowAllLabel}" FontSize="Medium" FontAttributes="None" VerticalOptions="Center"/>
                            <Label Grid.Column="1" Text="{x:Static fa:FontAwesomeIcons.Circle}" FontFamily="FAR"
                                   HorizontalOptions="Center" VerticalOptions="Center" FontSize="Title" TextColor="{StaticResource Primary}">
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label" Binding="{Binding FilterAll}" Value="true">
                                        <Setter Property="Text" Value="{x:Static fa:FontAwesomeIcons.CircleCheck}" />
                                        <Setter Property="TextColor" Value="{StaticResource GreenButton}"/>
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>
                            <Grid.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding FilterChangedCommand}" CommandParameter="{x:Static models:ItemFilter.All}"/>
                            </Grid.GestureRecognizers>
                        </Grid>


                        <Grid Grid.Row="6" Grid.ColumnSpan="2" Padding="10,0,0,0" ColumnDefinitions="*,.2*" BackgroundColor="Transparent" >
                            <Label Text="{x:Static res:AppResources.OnlyActualLabel}" FontSize="Medium" FontAttributes="None" VerticalOptions="Center"/>
                            <Label Grid.Column="1" Text="{x:Static fa:FontAwesomeIcons.Circle}" FontFamily="FAR"
                                   HorizontalOptions="Center" VerticalOptions="Center" FontSize="Title" TextColor="{StaticResource Primary}">
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label" Binding="{Binding FilterActual}" Value="true">
                                        <Setter Property="Text" Value="{x:Static fa:FontAwesomeIcons.CircleCheck}" />
                                        <Setter Property="TextColor" Value="{StaticResource GreenButton}"/>
                                    </DataTrigger>
                                </Label.Triggers>

                            </Label>
                            <Grid.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding FilterChangedCommand}" CommandParameter="{x:Static models:ItemFilter.Actual}"/>
                            </Grid.GestureRecognizers>
                        </Grid>


                        <Grid Grid.Row="7" Grid.ColumnSpan="2" Padding="10,0,0,0" ColumnDefinitions="*,.2*" BackgroundColor="Transparent">
                            <Label Text="{x:Static res:AppResources.OnlyArchiveLabel}" FontSize="Medium" FontAttributes="None" VerticalOptions="Center"/>
                            <Label Grid.Column="1" Text="{x:Static fa:FontAwesomeIcons.Circle}" FontFamily="FAR"
                                   HorizontalOptions="Center" VerticalOptions="Center" FontSize="Title" TextColor="{StaticResource Primary}">
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label" Binding="{Binding FilterArchive}" Value="true">
                                        <Setter Property="Text" Value="{x:Static fa:FontAwesomeIcons.CircleCheck}" />
                                        <Setter Property="TextColor" Value="{StaticResource GreenButton}"/>
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>
                            <Grid.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding FilterChangedCommand}" CommandParameter="{x:Static models:ItemFilter.Archive}"/>
                            </Grid.GestureRecognizers>
                        </Grid>


                    </Grid>
                </Grid>

                <Frame.GestureRecognizers>
                    <PanGestureRecognizer PanUpdated="PanGestureRecognizer_PanUpdated" />

                </Frame.GestureRecognizers>
            </Frame>
            <Grid.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding HideShowFiltersCommand}"/>
            </Grid.GestureRecognizers>
        </Grid>
    </Grid>
</ContentPage>

